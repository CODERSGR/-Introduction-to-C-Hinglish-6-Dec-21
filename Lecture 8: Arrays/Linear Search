Linear Search
Send Feedback
You have been given a random integer array/list(ARR) of size N, and an integer X. You need to search for the integer X in the given array/list using 'Linear Search'.
 You have been required to return the index at which X is present in the array/list. If X has multiple occurrences in the array/list, then you need to return the index at which the first occurrence of X would be encountered. In case X is not present in the array/list, then return -1.
'Linear search' is a method for finding an element within an array/list. It sequentially checks each element of the array/list until a match is found or the whole array/list has been searched.
Input format :
The first line contains an Integer 't' which denotes the number of test cases or queries to be run. Then the test cases follow.

First line of each test case or query contains an integer 'N' representing the size of the array/list.

Second line contains 'N' single space separated integers representing the elements in the array/list.

Third line contains the value of X(integer to be searched in the given array/list)
Output format :
For each test case, print the index at which X is present or -1, otherwise.

Output for every test case will be printed in a separate line.
Constraints :
1 <= t <= 10^2
0 <= N <= 10^5
-2 ^ 31 <= X <= (2 ^ 31) - 1
Time Limit: 1 sec
Sample Input 1:
1
7
2 13 4 1 3 6 28
3
Sample Output 1:
4
Sample Input 2:
2
7
2 13 4 1 3 6 28
9
5
7 8 5 9 5      
5
Sample Output 2:
-1
2


/*************************************************** SOLUTION *************************************************************************/


/***************************************************MAIN CODE *************************************************************************/

#include <iostream>
using namespace std;

#include "solution.h"

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		int n;
		cin >> n;
		int *arr = new int[n];
		for (int i = 0; i < n; ++i)
		{
			cin >> arr[i];
		}
		int val;
		cin >> val;
		cout << linearSearch(arr, n, val) << endl;
	}
	return 0;
}

/***************************************************YOUR CODE*************************************************************************/

int linearSearch(int arr[], int n ,int val){
    for(int i = 0; i < n; i++){
        if(arr[i] == val){
            return i;
        }
    }
    return -1;
}


/***************************************************EDITORIAL SOLUTION *************************************************************************/


Linear Search
Problem Description: You are given with a random integer array A with its size and an element
x. You need to search this element x in the given array, using linear search. Return the index of
element in the input. If the element is not found in the array, return -1.
For example: Size: 7
 arr[]=2 13 4 1 3 6 28
 Element x: 3
For this input, output should be 4, as 3 is located at index 4.
How to approach?
Linear search means, we need to compare each element from the array A one by one with the
element x starting with the leftmost element, till we find the match or we reach the end of array.
If match found, return its index, and if not return -1.
Time complexity of linear search is: O(n)
Pseudo Code for this problem:
Function linearsearch:
 For i =0 to i less than n:
 If arr[i] is equal to x:
 Return i
 Return -1
❏ Let us dry run the code for N= 7
➔ Take the array as input =7
arr[]= 2 13 4 1 3 6 28
Element x: 3
➔ i=0
arr[0] is not equal to 3.
➔ i=1
arr[1] is not equal to 3.
➔ i=2
arr[2] is not equal to 3.
➔ i=3
arr[3] is not equal to 3.
➔ i=4
arr[4] is equal to 3.
So, return 4.
Final Output:
4
