Arrange Numbers in Array
Send Feedback
You have been given an empty array(ARR) and its size N. The only input taken from the user will be N and you need not worry about the array.
Your task is to populate the array using the integer values in the range 1 to N(both inclusive) in the order - 1,3,5,.......,6,4,2.
Note:
You need not print the array. You only need to populate it.
Input Format :
The first line contains an Integer 't' which denotes the number of test cases or queries to be run. Then the test cases follow.

The first and the only line of each test case or query contains an integer 'N'.
Output Format :
For each test case, print the elements of the array/list separated by a single space.

Output for every test case will be printed in a separate line.
Constraints :
1 <= t <= 10^2
0 <= N <= 10^4

Time Limit: 1sec
Sample Input 1 :
1
6
Sample Output 1 :
1 3 5 6 4 2
Explanation of Sample Input 1 :
Since the value of N is 6, the number will be stored in the array in such a fashion that 1 will appear at 0th index, then 2 at the last index, in a similar fashion 3 is stored at index 1. Hence the array becomes 1 3 5 6 4 2.
Sample Input 2 :
2
9
3
Sample Output 2 :
1 3 5 7 9 8 6 4 2
1 3 2


/*************************************************** SOLUTION *************************************************************************/


/***************************************************MAIN CODE *************************************************************************/

#include <iostream>
using namespace std;

#include "solution.h"

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		int n;
		cin >> n;

		int *arr = new int[n];
		arrange(arr, n);
		for (int i = 0; i < n; i++)
		{
			cout << arr[i] << " ";
		}
		cout << endl;
		delete [] arr;
	}

	
}

/***************************************************YOUR CODE*************************************************************************/


 void arrange(int arr[],int n){
    int j = 0;
	int i = 0;
    
    while(j <= n){
        
        if( j % 2 != 0){
            arr[i] = j;
            i++;
            j++;
        }
        else{
            j++;
        }
    }
    j = n;
    while(j >= 1){
        
        if(j % 2 == 0){
            arr[i] = j;
            i++;
            j--;
        }
        else{
            j--;
        }
    }
}

/*
	void arrange(int arr[],int n){
    
 	int i,j=0;
	for(i = 1; i <= n; i++)
	{
		if( i % 2 != 0)
		{
			arr[j] = i;
			j++;
		}
		
	}
	
	for(i = n ; i > 0;i--)
	{
		if( i%2 == 0)
		{
			arr[j] = i;
			j++ ;
		}
	}
}
*/


/***************************************************EDITORIAL SOLUTION *************************************************************************/


Arrange Numbers in Array
Problem Description: You are given with a number n, put all elements from 1 to n in an array in
order - 1,3,.......4,2
For example, if N=6, then the output must be: 1 3 5 6 4 2
How to approach?
To arrange the numbers in the given sequence, we can continue by taking 2 indices one from
start(i) and the other from the end(j). Start with number =1, print it on the first index(i), then
increment the number and index i, now print the number on the last index(j), again increment the
number and decrement j, print number on the 2nd index(i) and so on continue till i crosses j.
Pseudo Code for this problem:
Function arrange:
 i=0, j=n-1
 number=1
 While i is less than j:
 arr[i]=number
 Increment number by 1
 Increment i by 1.
 arr[j]= number
 Increment number by 1
 Decrement j by 1
If i is equal to j:
 arr[i]=number
❏ Let us dry run the code for N= 6
i=0, j=5
number=1
➔ arr[0]=1
i=1, number=2
➔ arr[5]=2
j=4, number=3
➔ arr[1]=3
i=2, number=4
➔ arr[4]=4
j=3, number=5
➔ arr[2]=5
i=3, number=6
➔ i=j
arr[3]=6
Final output:
arr[]=1 3 5 6 4 2
