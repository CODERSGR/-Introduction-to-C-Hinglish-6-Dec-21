Square Root (Integral)
Send Feedback
Given a number N, find its square root. You need to find and print only the integral part of square root of N.
For eg. if number given is 18, answer is 4.
Input format :
Integer N
Output Format :
Square root of N (integer part only)
Constraints :
0 <= N <= 10^8
Sample Input 1 :
10
Sample Output 1 :
3
Sample Input 2 :
4
Sample Output 2 :
2




/*************************************************** SOLUTION *************************************************************************/





#include<iostream>
using namespace std;

int main() {
     int x;
    cin>>x;
    if (x == 1 || x == 1)
    cout<<x;
    int i = 1, result = 1;
    while (result <= x){
    i++;
      result = i * i;
    }
    cout<< i - 1;
	// Write your code here
	
}



/***************************************************EDITORIAL SOLUTION *************************************************************************/


Square Root (Integral)
Problem Description: Given a number N, find its square root. You need to find and print only the
integral part of square root of N.
For example, if the number given is 18, it’s square root is 4.
How to approach?
You are given a number N, for which you have to find its integral square root, so, take a variable
output which will be your final answer, initialize this variable with 0 and loop until
output*output becomes greater than N.
1. Take the number N, as input from the user.
2. Now, initialize your output by 0.
3. Run a while loop till the output*output becomes greater than N.
4. In each iteration of this loop, increment the output by 1.
5. The final output will be 1 less than the output obtained.
Pseudo Code for this problem:
Input = N
output=0
While output*output is less than equal to 0:
 output=output+1
print(output-1)
❏ Let us dry run the code:
N=18
● output=0
● 0*0<=18
output=0+1=1
● 1*1<=18
output=1+1=2
● 2*2<=18
output=2+1=3
● 3*3<=18
output=3+1=4.
● 4*4<=18
output=4+1=5
● 5*5>18
● Final output:
5-1=4
