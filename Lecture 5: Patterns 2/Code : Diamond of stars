Code : Diamond of stars
Send Feedback
Print the following pattern for the given number of rows.
Note: N is always odd.


Pattern for N = 5



The dots represent spaces.



Input format :
N (Total no. of rows and can only be odd)
Output format :
Pattern in N lines
Constraints :
1 <= N <= 49
Sample Input 1:
5
Sample Output 1:
  *
 ***
*****
 ***
  *
Sample Input 2:
3
Sample Output 2:
  *
 ***
  *
  
  
  
  
  
  
  

/*************************************************** SOLUTION *************************************************************************/





#include<iostream>
using namespace std;
int main(){
    
    int i=1 ;
    int j=1;
    int n;
     cin >> n;
    int k;
    while(i<=(n+1)/2){
    k=1;
    while(k<=(n+1)/2-i){
        cout<<" ";
        k=k+1;
    }
     j=1;
    while(j<=2*i-1)
    {
        cout<<"*";
        j=j+1;
    }
    cout << endl;
    i=i+1;
        }
    while(i<=n)
    {
        k=1;
    while(k<=i-(n+1)/2){
        cout<<" ";
        k=k+1;
    }
        j=1;
        while(j<=2*(n-i)+1){
            cout<<"*";
            j=j+1;
        }
        cout<<endl;
        i=i+1;
    }
}


/***************************************************EDITORIAL SOLUTION *************************************************************************/


Diamond of Stars
Problem Description: You are given with an input number N, then you have to print the given
diamond pattern corresponding to that number N.
For example if N=5
Pattern output : *
 ***
 *****
 ***
 *
How to approach?
1. Take N as input from the user.
2. Figure out the number of rows, (which is N here) and run a loop for that. Here you need
to run 2 loops, one for upper half and another for the lower half.
3. Now, figure out the number of columns in ith row (i.e. 2*(i)-1) and run a loop for that
within this. Here, first you need to run a loop to print the spaces too.
4. Now, figure out “What to print?” in a particular row, column number. Here we have to
print “*”.
Pseudo code for the given problem:
input=N
n1=N/2+1
i=1
While i is less than equal to n1:
 spaces=1
 While spaces is less than (n1-i):
 print(‘ ‘)
 Increment spaces by 1
 j=1
 While j is less than equal to 2*i-1:
 print(“*”)
 Increment j by 1
 Increment i by 1
 Add a new line here
n2=n-n1
i=n2
While i is greater than equal to 1:
 spaces=1
 While spaces is less than (n1-i):
 print(‘ ‘)
 Increment spaces by 1
 j=1
 While j is less than equal to 2*i-1:
 print(“*”)
 Increment j by 1
 Increment i by 1
 Add a new line here
❏ Let us dry run the Code for N=5, n1=3
● i=1(<=3)
➔ 3-1=2 spaces are getting printed first.
➔ j=1(<=2*1-1), so print ”*”
➔ j=2 (>2*1-1), move out of the inner loop with a new line
● i=2(<=3)
➔ 3-2=1 space is getting printed first.
➔ j=1 (<=2*2-1), so print “*”
➔ j=2 (<=2*2-1), so print “*”
➔ j=3 (<=2*2-1), so print “*”
➔ j=4(>2*2-1), move out of the inner loop with a new line
● i=3(<=3)
➔ 3-3=0 space is getting printed first.
➔ j=1(<=2*3-1), so print “*”
➔ j=2(<=2*3-1), so print “*”
➔ j=3(<=2*3-1), so print “*”
➔ j=4(<=2*3-1), so print “*”
➔ j=5(<=2*3-1), so print “*”
➔ j=6(>2*3-1), move out of the inner loop with a new line
● n2=5-3=2
● i=2(>=1)
➔ 3-2=1 space is getting printed first.
➔ j=1 (<=2*2-1), so print “*”
➔ j=2 (<=2*2-1), so print “*”
➔ j=3 (<=2*2-1), so print “*”
➔ j=4(>2*2-1), move out of the inner loop with a new line
● i=1(>=4)
➔ 3-1=2 spaces are getting printed first.
➔ j=1(<=2*1-1), so print ”*”
➔ j=2 (>2*1-1), move out of the inner loop with a new line
So , final output:
 *
 ***
 *****
 ***
  *
